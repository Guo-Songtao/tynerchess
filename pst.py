from copy import deepcopy

from definitions import BLANK, EDGE


p = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    50,
    50,
    50,
    50,
    50,
    50,
    50,
    50,
    0,
    0,
    10,
    10,
    20,
    30,
    30,
    20,
    10,
    10,
    0,
    0,
    5,
    5,
    10,
    25,
    25,
    10,
    5,
    5,
    0,
    0,
    0,
    0,
    0,
    20,
    20,
    0,
    0,
    0,
    0,
    0,
    5,
    -5,
    -10,
    0,
    0,
    -10,
    -5,
    5,
    0,
    0,
    5,
    10,
    10,
    -20,
    -20,
    10,
    10,
    5,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
]

n = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    -50,
    -40,
    -30,
    -30,
    -30,
    -30,
    -40,
    -50,
    0,
    0,
    -40,
    -20,
    0,
    0,
    0,
    0,
    -20,
    -40,
    0,
    0,
    -30,
    0,
    10,
    15,
    15,
    10,
    0,
    -30,
    0,
    0,
    -30,
    5,
    15,
    20,
    20,
    15,
    5,
    -30,
    0,
    0,
    -30,
    0,
    15,
    20,
    20,
    15,
    0,
    -30,
    0,
    0,
    -30,
    5,
    10,
    15,
    15,
    10,
    5,
    -30,
    0,
    0,
    -40,
    -20,
    0,
    5,
    5,
    0,
    -20,
    -40,
    0,
    0,
    -50,
    -40,
    -30,
    -30,
    -30,
    -30,
    -40,
    -50,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
]

b = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    -20,
    -10,
    -10,
    -10,
    -10,
    -10,
    -10,
    -20,
    0,
    0,
    -10,
    0,
    0,
    0,
    0,
    0,
    0,
    -10,
    0,
    0,
    -10,
    0,
    5,
    10,
    10,
    5,
    0,
    -10,
    0,
    0,
    -10,
    5,
    5,
    10,
    10,
    5,
    5,
    -10,
    0,
    0,
    -10,
    0,
    10,
    10,
    10,
    10,
    0,
    -10,
    0,
    0,
    -10,
    10,
    10,
    10,
    10,
    10,
    10,
    -10,
    0,
    0,
    -10,
    5,
    0,
    0,
    0,
    0,
    5,
    -10,
    0,
    0,
    -20,
    -10,
    -10,
    -10,
    -10,
    -10,
    -10,
    -20,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
]

r = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    5,
    10,
    10,
    10,
    10,
    10,
    10,
    5,
    0,
    0,
    -5,
    0,
    0,
    0,
    0,
    0,
    0,
    -5,
    0,
    0,
    -5,
    0,
    0,
    0,
    0,
    0,
    0,
    -5,
    0,
    0,
    -5,
    0,
    0,
    0,
    0,
    0,
    0,
    -5,
    0,
    0,
    -5,
    0,
    0,
    0,
    0,
    0,
    0,
    -5,
    0,
    0,
    -5,
    0,
    0,
    0,
    0,
    0,
    0,
    -5,
    0,
    0,
    0,
    0,
    0,
    5,
    5,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
]

q = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    -20,
    -10,
    -10,
    -5,
    -5,
    -10,
    -10,
    -20,
    0,
    0,
    -10,
    0,
    0,
    0,
    0,
    0,
    0,
    -10,
    0,
    0,
    -10,
    0,
    5,
    5,
    5,
    5,
    0,
    -10,
    0,
    0,
    -5,
    0,
    5,
    5,
    5,
    5,
    0,
    -5,
    0,
    0,
    0,
    0,
    5,
    5,
    5,
    5,
    0,
    -5,
    0,
    0,
    -10,
    5,
    5,
    5,
    5,
    5,
    0,
    -10,
    0,
    0,
    -10,
    0,
    5,
    0,
    0,
    0,
    0,
    -10,
    0,
    0,
    -20,
    -10,
    -10,
    -5,
    -5,
    -10,
    -10,
    -20,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
]

# king middlegame
km = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    -30,
    -40,
    -40,
    -50,
    -50,
    -40,
    -40,
    -30,
    0,
    0,
    -30,
    -40,
    -40,
    -50,
    -50,
    -40,
    -40,
    -30,
    0,
    0,
    -30,
    -40,
    -40,
    -50,
    -50,
    -40,
    -40,
    -30,
    0,
    0,
    -30,
    -40,
    -40,
    -50,
    -50,
    -40,
    -40,
    -30,
    0,
    0,
    -20,
    -30,
    -30,
    -40,
    -40,
    -30,
    -30,
    -20,
    0,
    0,
    -10,
    -20,
    -20,
    -20,
    -20,
    -20,
    -20,
    -10,
    0,
    0,
    20,
    20,
    0,
    0,
    0,
    0,
    20,
    20,
    0,
    0,
    20,
    30,
    10,
    0,
    0,
    10,
    30,
    20,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
]
# king endgame
ke = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    -50,
    -40,
    -30,
    -20,
    -20,
    -30,
    -40,
    -50,
    0,
    0,
    -30,
    -20,
    -10,
    0,
    0,
    -10,
    -20,
    -30,
    0,
    0,
    -30,
    -10,
    20,
    30,
    30,
    20,
    -10,
    -30,
    0,
    0,
    -30,
    -10,
    30,
    40,
    40,
    30,
    -10,
    -30,
    0,
    0,
    -30,
    -10,
    30,
    40,
    40,
    30,
    -10,
    -30,
    0,
    0,
    -30,
    -10,
    20,
    30,
    30,
    20,
    -10,
    -30,
    0,
    0,
    -30,
    -30,
    0,
    0,
    0,
    0,
    -30,
    -30,
    0,
    0,
    -50,
    -30,
    -30,
    -30,
    -30,
    -30,
    -30,
    -50,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
]

nothing = [0] * 120

PST = {
    "P": p,
    "N": n,
    "B": b,
    "R": r,
    "Q": q,
    "KM": km,
    "KE": ke,
    BLANK: nothing,
    EDGE: nothing,
}


def addVal(piece: str, val: int):
    l = PST[piece]
    for i in range(len(l)):
        l[i] += val


addVal("P", 100)
addVal("N", 350)
addVal("B", 350)
addVal("R", 525)
addVal("Q", 1_000)
addVal("KM", 100_000)
addVal("KE", 100_000)

k = list(PST.keys())
for piece in k:

    PST[piece.lower()] = deepcopy(PST[piece])[::-1]
    l = PST[piece.lower()]
    for i in range(len(l)):
        l[i] *= -1
